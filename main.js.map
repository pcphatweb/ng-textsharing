{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component/container-detail/container-detail.component.css","webpack:///./src/app/component/container-detail/container-detail.component.html","webpack:///./src/app/component/container-detail/container-detail.component.ts","webpack:///./src/app/component/container-edit/container-edit.component.css","webpack:///./src/app/component/container-edit/container-edit.component.html","webpack:///./src/app/component/container-edit/container-edit.component.ts","webpack:///./src/app/component/container-home/container-home.component.css","webpack:///./src/app/component/container-home/container-home.component.html","webpack:///./src/app/component/container-home/container-home.component.ts","webpack:///./src/app/component/container-login/container-login.component.css","webpack:///./src/app/component/container-login/container-login.component.html","webpack:///./src/app/component/container-login/container-login.component.ts","webpack:///./src/app/component/container-register/container-register.component.css","webpack:///./src/app/component/container-register/container-register.component.html","webpack:///./src/app/component/container-register/container-register.component.ts","webpack:///./src/app/component/footer/footer.component.css","webpack:///./src/app/component/footer/footer.component.html","webpack:///./src/app/component/footer/footer.component.ts","webpack:///./src/app/component/nav/nav.component.css","webpack:///./src/app/component/nav/nav.component.html","webpack:///./src/app/component/nav/nav.component.ts","webpack:///./src/app/component/welcome/welcome.component.css","webpack:///./src/app/component/welcome/welcome.component.html","webpack:///./src/app/component/welcome/welcome.component.ts","webpack:///./src/app/service/textsharing.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }             from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ContainerHomeComponent }      from './component/container-home/container-home.component';\r\nimport { ContainerLoginComponent }      from './component/container-login/container-login.component';\r\nimport { ContainerRegisterComponent }      from './component/container-register/container-register.component';\r\nimport { ContainerDetailComponent }      from './component/container-detail/container-detail.component';\r\n\r\n// const routes: Routes = [\r\n//   { path:'', redirectTo: './', pathMatch: 'full' },\r\n//   { path: './', component: ContainerHomeComponent },\r\n//   { path: 'login', component: ContainerLoginComponent },\r\n//   { path: 'register', component: ContainerRegisterComponent },\r\n//   { path: 'detail/:id', component: ContainerDetailComponent }\r\n// ];\r\n@NgModule({\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\r\\n<router-outlet></router-outlet>\\r\\n<!-- <app-container-home></app-container-home>\\r\\n<app-container-login></app-container-login>\\r\\n<app-container-register></app-container-register>\\r\\n<app-container-detail></app-container-detail> -->\\r\\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule }    from '@angular/common/http';\r\n// import { HighlightDirective } from 'ng-highlight';\r\nimport { HighlightModule } from 'ngx-highlightjs';\r\nimport { MarkdownModule } from 'ngx-markdown';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n// import { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './component/nav/nav.component';\r\nimport { FooterComponent } from './component/footer/footer.component';\r\nimport { ContainerHomeComponent } from './component/container-home/container-home.component';\r\nimport { ContainerDetailComponent } from './component/container-detail/container-detail.component';\r\nimport { ContainerLoginComponent } from './component/container-login/container-login.component';\r\nimport { ContainerRegisterComponent } from './component/container-register/container-register.component';\r\nimport { WelcomeComponent } from './component/welcome/welcome.component';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { ContainerEditComponent } from './component/container-edit/container-edit.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path:'', redirectTo: './', pathMatch: 'full' },\r\n  { path: './', component: ContainerHomeComponent },\r\n  { path: 'login', component: ContainerLoginComponent },\r\n  { path: 'register', component: ContainerRegisterComponent },\r\n  { path: 'detail/:id', component: ContainerDetailComponent }\r\n];\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    FooterComponent,\r\n    ContainerHomeComponent,\r\n    ContainerDetailComponent,\r\n    ContainerLoginComponent,\r\n    ContainerRegisterComponent,\r\n    WelcomeComponent,\r\n    ContainerEditComponent,\r\n    // HighlightDirective\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n      { enableTracing: true, useHash: false } // <-- debugging purposes only\r\n    ),\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    HighlightModule.forRoot( {theme : 'agate'} ),\r\n    MarkdownModule.forRoot()\r\n  ],\r\n  // providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"content\\\">\\r\\n    <div class=\\\"row\\\" *ngIf='isLoading'>\\r\\n      <div class=\\\"col-md-12 col-sm-12 col-xs-12 text-center\\\">\\r\\n        Loading...\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"Loaded\\\">\\r\\n      <app-welcome></app-welcome>\\r\\n\\r\\n      <h2>Paste</h2>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"container\\\">\\r\\n            <ul class=\\\"ss-share\\\">\\r\\n              <li class=\\\"ss-share-item\\\">\\r\\n                <a class=\\\"btn btn-primary\\\" (click)=\\\"onEdit()\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>&nbsp;Edit\\r\\n                </a>\\r\\n              </li>\\r\\n              <li class=\\\"ss-share-item\\\">\\r\\n                <a class=\\\"btn btn-warning\\\" href=\\\"#\\\">\\r\\n                  <i class=\\\"fas fa-flag\\\"></i>&nbsp;Report abuse\\r\\n                </a>\\r\\n              </li>\\r\\n              <!-- <li class=\\\"ss-share-item\\\">\\r\\n                <a class=\\\"ss-share-link ico-paste\\\" href=\\\"#\\\">\\r\\n                  <i class=\\\"fas fa-flag\\\"></i>&nbsp;Report abuse</a>\\r\\n              </li> -->\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <button (click)=\\\"copyInputURL(iptURL)\\\" onclick=\\\"myFunction();\\\" class=\\\"btn btn-success btn-sm\\\">Copy URL</button>\\r\\n          &nbsp;\\r\\n          <input class=\\\"nothing\\\" style=\\\"width:100%\\\"  value=\\\"{{urlPaste}}\\\" #iptURL />\\r\\n\\r\\n          <script>\\r\\n            function myFunction() {\\r\\n              var copyText = document.getElementById(\\\"shorturl\\\");\\r\\n              copyText.select();\\r\\n              document.execCommand(\\\"Copy\\\");\\r\\n            }\\r\\n          </script>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-6 text-right\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          Pasted by {{userNamePaste}}</div>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <pre *ngIf='notMarkDown'><code highlight [textContent]=\\\"contentPaste\\\"></code></pre>\\r\\n\\r\\n          <div *ngIf='isMarkDown' style=\\\"border:1px solid #ccc;background-color:#fff; padding: 10px;border-radius:3px;\\\">\\r\\n            <div style=\\\"background-color:#333; color:#fff;padding: 10px\\\">\\r\\n              <markdown ngPreserveWhitespaces>\\r\\n                  {{contentPaste}}\\r\\n              </markdown>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <p>&nbsp;</p>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"selectedEdit\\\">\\r\\n        <h2>Enter text here</h2>\\r\\n        <div class=\\\"row\\\">\\r\\n          <form action=\\\"#\\\" class=\\\"form-inline text-center\\\" method=\\\"post\\\" accept-charset=\\\"utf-8\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <a name=\\\"code\\\">&nbsp;</a>\\r\\n              Code Language\\r\\n              <select name=\\\"language\\\" class=\\\"form-control\\\" #codeLanguage>\\r\\n                <option value=\\\"\\\">Choose</option>\\r\\n                <option value=\\\"bash\\\">Bash</option>\\r\\n                <option value=\\\"c\\\">C</option>\\r\\n                <option value=\\\"csharp\\\">C#</option>\\r\\n                <option value=\\\"cpp\\\">C++</option>\\r\\n                <option value=\\\"css\\\">CSS</option>\\r\\n                <option value=\\\"html\\\">HTML</option>\\r\\n                <option value=\\\"java\\\">Java</option>\\r\\n                <option value=\\\"javascript\\\">JavaScript</option>\\r\\n                <option value=\\\"json\\\">JSON</option>\\r\\n                <option value=\\\"perl\\\">Perl</option>\\r\\n                <option value=\\\"php\\\">PHP</option>\\r\\n                <option value=\\\"nohighlight\\\">Plain Text</option>\\r\\n                <option value=\\\"python\\\">Python</option>\\r\\n                <option value=\\\"ruby\\\">Ruby</option>\\r\\n                <option value=\\\"xml\\\">XML</option>\\r\\n                <option value=\\\"markdown\\\">Markdown</option>\\r\\n              </select><br/><br/>\\r\\n              <textarea style=\\\"width: 100%; height: 200px;\\\" class=\\\"form-control\\\"  name=\\\"content\\\" #updateContent>{{contentPaste}}</textarea>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-12 text-left\\\">\\r\\n              <table>\\r\\n                <tbody>\\r\\n                  <tr>\\r\\n                    <td>\\r\\n                      <input type=\\\"submit\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"onUpdatePaste(codeLanguage.value , updateContent.value)\\\" value=\\\"Update\\\">\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n              <p></p>\\r\\n            </div>\\r\\n\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { TextsharingService } from '../../service/textsharing.service';\r\nimport {Router, ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-container-detail',\r\n  templateUrl: './container-detail.component.html',\r\n  styleUrls: ['./container-detail.component.css']\r\n})\r\nexport class ContainerDetailComponent implements OnInit {\r\n\r\n  urlPaste : string;\r\n\r\n  userNamePaste : string;\r\n\r\n  contentPaste : string;\r\n\r\n  languagePaste : string;\r\n\r\n  selectedEdit: boolean = false;\r\n\r\n  notMarkDown: boolean = false;\r\n\r\n  isMarkDown: boolean = false;\r\n\r\n  isLoading: boolean = true;\r\n\r\n  Loaded: boolean = false;\r\n\r\n  userid : number;\r\n\r\n  constructor( private textSharingService: TextsharingService , private route: ActivatedRoute, private _router:Router  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getPaste();\r\n  }\r\n\r\n\r\n  getPaste(): void {\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.userid = id;\r\n    this.urlPaste = location.href;\r\n    this.textSharingService.getDetail(id).subscribe((data) => {\r\n      \r\n      this.userNamePaste = data.Name;\r\n      this.languagePaste = data.Language;\r\n      this.contentPaste = data.Content;\r\n\r\n      if(this.languagePaste == 'markdown')\r\n        this.isMarkDown = true;\r\n      else\r\n        this.notMarkDown = true;\r\n\r\n      console.log(data);\r\n\r\n      this.isLoading = false;\r\n      this.Loaded = true;\r\n\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n    // console.log(\"id la \" + id);\r\n  }\r\n\r\n  onEdit(): void {\r\n    this.selectedEdit = true;\r\n  }\r\n  \r\n  onUpdatePaste(codeLanguage, contentUpdate): any {\r\n    this.textSharingService.updatePaste(this.userid, codeLanguage, contentUpdate).subscribe((data) => {\r\n\r\n    alert(\"Update Success\");\r\n\r\n    location.reload();\r\n    \r\n\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n  copyInputURL(inputElement){\r\n    inputElement.select();\r\n    document.execCommand('copy');\r\n    inputElement.setSelectionRange(0, 100);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  container-edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container-edit',\n  templateUrl: './container-edit.component.html',\n  styleUrls: ['./container-edit.component.css']\n})\nexport class ContainerEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"content\\\">\\r\\n\\r\\n    <app-welcome></app-welcome>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <form action=\\\"#\\\" class=\\\"form-inline text-center\\\" method=\\\"post\\\" accept-charset=\\\"utf-8\\\">\\r\\n        <div class=\\\"col-md-12 text-center\\\">\\r\\n          Your Name:\\r\\n          <input class=\\\"form-control\\\" name=\\\"username\\\" #userName value=\\\"\\\"> Code Language\\r\\n          <select name=\\\"language\\\" class=\\\"form-control\\\" #codeLanguage>\\r\\n            <option value=\\\"\\\">Choose</option>\\r\\n            <option value=\\\"bash\\\">Bash</option>\\r\\n            <option value=\\\"c\\\">C</option>\\r\\n            <option value=\\\"csharp\\\">C#</option>\\r\\n            <option value=\\\"cpp\\\">C++</option>\\r\\n            <option value=\\\"css\\\">CSS</option>\\r\\n            <option value=\\\"html\\\">HTML</option>\\r\\n            <option value=\\\"java\\\">Java</option>\\r\\n            <option value=\\\"javascript\\\">JavaScript</option>\\r\\n            <option value=\\\"json\\\">JSON</option>\\r\\n            <option value=\\\"perl\\\">Perl</option>\\r\\n            <option value=\\\"php\\\">PHP</option>\\r\\n            <option value=\\\"nohighlight\\\">Plain Text</option>\\r\\n            <option value=\\\"python\\\">Python</option>\\r\\n            <option value=\\\"ruby\\\">Ruby</option>\\r\\n            <option value=\\\"xml\\\">XML</option>\\r\\n            <option value=\\\"markdown\\\">Markdown</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <a name=\\\"code\\\">&nbsp;</a>\\r\\n          <textarea style=\\\"width: 100%; height: 200px;\\\" class=\\\"form-control\\\" name=\\\"content\\\" #textContent></textarea>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <table>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <!-- <input type=\\\"submit\\\" class=\\\"btn btn-success btn-sm\\\" value=\\\"Paste Code\\\"> -->\\r\\n                <a style=\\\"color:#fff;\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"onClickPaste(userName.value, codeLanguage.value, textContent.value);\\\">Paste Code</a>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { TextsharingService } from '../../service/textsharing.service';\r\nimport {Router, ActivatedRoute} from '@angular/router';\r\nimport { error } from '../../../../node_modules/@angular/compiler/src/util';\r\n\r\n@Component({\r\n  selector: 'app-container-home',\r\n  templateUrl: './container-home.component.html',\r\n  styleUrls: ['./container-home.component.css']\r\n})\r\nexport class ContainerHomeComponent implements OnInit {\r\n\r\n  id : number;\r\n  constructor(private textSharingServer: TextsharingService, private _router:Router ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClickPaste(username, codelanguage, content) {\r\n    \r\n    let pasteFormData: {} = {\r\n      \"username\" : username,\r\n      \"language\" : codelanguage,\r\n      \"content\"  : content\r\n    } ;\r\n    this.textSharingServer.addPaste(pasteFormData).subscribe((data) => {\r\n\r\n      this.id = data;\r\n      this._router.navigate(['detail' , data ]);\r\n      console.log(data);\r\n\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"content\\\">\\r\\n\\r\\n    <app-welcome></app-welcome>\\r\\n\\r\\n    <h2 class=\\\"text-center\\\">Login</h2>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 col-md-offset-3\\\" style=\\\"background-color: #fff;padding: 15px;\\\">\\r\\n        <form action=\\\"#\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"email\\\">Username or Email address</label>\\r\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" >\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"pwd\\\">Password:</label>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"pwd\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <a href='#' class=\\\"text-primary\\\">Forgot password?</a>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success col-md-6 col-xs-6\\\">Login</button>\\r\\n            <a href=\\\"/login\\\" type=\\\"button\\\" class=\\\"btn btn-default col-md-5 col-xs-5 col-md-offset-1 col-xs-offset-1\\\">Create Account</a>\\r\\n          </div>\\r\\n          </form>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-container-login',\r\n  templateUrl: './container-login.component.html',\r\n  styleUrls: ['./container-login.component.css']\r\n})\r\nexport class ContainerLoginComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"content\\\">\\r\\n\\r\\n    <app-welcome></app-welcome>\\r\\n\\r\\n    <!-- <div *ngIf=\\\"registerNotify\\\">\\r\\n      <h2 class=\\\"text-center\\\" [ngStyle]=\\\"styleSuccess\\\">Register Success</h2>\\r\\n    </div> -->\\r\\n\\r\\n      <h2 class=\\\"text-center\\\" [ngStyle]=\\\"styleStatus\\\">{{title}}</h2>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"registerForm\\\">\\r\\n        <div class=\\\"col-md-6 col-md-offset-3\\\" style=\\\"background-color: #fff;padding: 15px;\\\">\\r\\n          <form action=\\\"#\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"username\\\">Username</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" #registerUsername>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"password\\\">Password</label>\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" #registerPassword>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"confirmpassword\\\">Confirm Password</label>\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"confirmpassword\\\" #registerConfirmPassword>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"email\\\">Email address</label>\\r\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" #registerEmail>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success col-md-6 col-xs-6\\\" (click)=\\\"onClickRegister(registerUsername.value, registerPassword.value, registerConfirmPassword.value, registerEmail.value);\\\">Register</button>\\r\\n                <a href=\\\"/login\\\" type=\\\"button\\\" class=\\\"btn btn-default col-md-5 col-xs-5 col-md-offset-1 col-xs-offset-1\\\">Login</a>\\r\\n              </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n  \\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- \\r\\n<div *ngIf=\\\"messageService.messages.length\\\">\\r\\n\\r\\n  <h2>Messages</h2>\\r\\n  <button class=\\\"clear\\\"\\r\\n          (click)=\\\"messageService.clear()\\\">clear</button>\\r\\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\\r\\n\\r\\n</div> -->\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { TextsharingService } from '../../service/textsharing.service';\r\nimport { error } from 'util';\r\n\r\n@Component({\r\n  selector: 'app-container-register',\r\n  templateUrl: './container-register.component.html',\r\n  styleUrls: ['./container-register.component.css']\r\n})\r\nexport class ContainerRegisterComponent implements OnInit {\r\n\r\n  title = 'Register';\r\n  registerForm: boolean = true;\r\n\r\n  styleStatus: {} = {\"color\":\"black\"};\r\n\r\n  constructor(private textSharingService: TextsharingService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  @ViewChild('registerPassword') inputPassword: ElementRef;\r\n  @ViewChild('registerConfirmPassword') inputConfirmPassword: ElementRef;\r\n  @ViewChild('registerEmail') inputEmail: ElementRef;\r\n\r\n  onClickRegister(username, password, confirmpassword, email){\r\n    if(username == \"\" || password == \"\" || confirmpassword == \"\" || email == \"\") {\r\n\r\n      alert(\"The input field can't be empty\");\r\n    } else {\r\n\r\n      let isEmail = function check(email: string): boolean\r\n      {\r\n        let regexp = new RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n        let test = regexp.test(email);\r\n        return test;\r\n      }\r\n\r\n      if (password.length < 5) {\r\n        \r\n        alert(\"The Password field must be at least 5 characters in length.\");\r\n        this.inputPassword.nativeElement.focus();\r\n\r\n      } else if ( password !== confirmpassword ) {\r\n\r\n        alert(\"The Password field does not match the Confirm Password field.\");\r\n        this.inputConfirmPassword.nativeElement.focus();\r\n\r\n      } else if ( isEmail(email) == false ) {\r\n\r\n        alert(\"The Email field must contain a valid email address.\");\r\n        this.inputEmail.nativeElement.focus();\r\n\r\n      } else {\r\n\r\n        let registerFormData: {} = {\r\n          \"username\" : username,\r\n          \"password\" : password,\r\n          \"email\"    : email\r\n        };\r\n\r\n        this.textSharingService.addGuest(registerFormData).subscribe((data) => \r\n          {\r\n            if(data.status == 'available') {\r\n\r\n              this.title = 'Available Username';\r\n              this.styleStatus = {\"color\":\"red\"};\r\n\r\n            } else {\r\n\r\n              this.title = 'Register Success';\r\n              this.styleStatus = {\"color\":\"green\"};\r\n              this.registerForm = false;\r\n\r\n            }\r\n          }\r\n          , (error) => \r\n          {console.log(error)});\r\n\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div id=\\\"footer\\\">\\r\\n  <p>Copyright 2018 - Text Sharing</p>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"navbar-header\\\" style=\\\"padding-top: 10px;\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\"\\r\\n        aria-controls=\\\"navbar\\\">\\r\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n      </button>\\r\\n      <a href=\\\"./\\\">\\r\\n        Text Sharing\\r\\n      </a>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"navbar\\\" class=\\\"collapse navbar-collapse\\\">\\r\\n      <ul class=\\\"nav navbar-nav\\\">\\r\\n        <li>\\r\\n          <a routerLink=\\\"./\\\">Home</a>\\r\\n        </li>\\r\\n        <li>\\r\\n          <a routerLink=\\\"./\\\">Contact</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <a class=\\\"nav-login-register\\\" routerLink=\\\"/register\\\"><span class=\\\"nav navbar-right navbar-text hidden-xs\\\" style=\\\"padding-right: 25px;\\\">Register</span></a>\\r\\n      <a class=\\\"nav-login-register\\\" routerLink=\\\"/login\\\"><span class=\\\"nav navbar-right navbar-text hidden-xs\\\" style=\\\"padding-right: 25px;\\\">Login</span></a>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12 col-sm-12 col-xs-12 text-center\\\">\\r\\n    Welcome, guest!\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12 text-center hidden-sm hidden-xs\\\">\\r\\n    <!-- [ Pastes: 94153 ] -->\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.css']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable } from '../../../node_modules/rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TextsharingService {\r\n\r\n  // private registerURL = 'http://localhost:8888/textsharing/text-sharing-php/register.php';\r\n  // private pasteURL = 'http://localhost:8888/textsharing/text-sharing-php/paste.php';\r\n  // private detailURL = 'http://localhost:8888/textsharing/text-sharing-php/detail.php';\r\n  // private updateURL = 'http://localhost:8888/textsharing/text-sharing-php/update.php';\r\n\r\n  private registerURL = 'https://pcphat.000webhostapp.com/textsharing/register.php';\r\n  private pasteURL = 'https://pcphat.000webhostapp.com/textsharing/paste.php';\r\n  private detailURL = 'https://pcphat.000webhostapp.com/textsharing/detail.php';\r\n  private updateURL = 'https://pcphat.000webhostapp.com/textsharing/update.php';\r\n\r\n\r\n  constructor( private http: HttpClient ) { }\r\n\r\n  addGuest (registerData): Observable<any> {\r\n    return this.http.post(this.registerURL, registerData);\r\n  }\r\n\r\n  addPaste (pasteData): Observable<any> {\r\n    return this.http.post(this.pasteURL, pasteData);\r\n  }\r\n\r\n  getDetail (id): Observable<any> {\r\n    return this.http.get(this.detailURL + '?id=' + id);\r\n  }\r\n  \r\n  updatePaste (id, language, content): Observable<any> {\r\n    let updateFormData: {} = {\r\n      \"id\" : id,\r\n      \"language\" : language,\r\n      \"content\"  : content\r\n    } ;\r\n    console.log(updateFormData);\r\n    return this.http.post(this.updateURL, updateFormData);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}